<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljs.dao.UserMapper">
    <!--查询用户-->
    <select id="findUser" resultType="userInfo">
        select * from base_user
        <where>
            <if test="user != null and user != ''">
                and userName like concat('%',#{user},'%')
            </if>
            <if test="sex != '全部'">
                and sex=#{sex}
            </if>
            <if test="start != null and start != ''">
                and createTime &gt; #{start}
            </if>
            <if test="end != null and end != ''">
                and createTime &lt; #{end}
            </if>
        </where>
        order by id desc
    </select>

    <!-- 根据登录名查询用户 -->
    <select id="findUserByLoginName" resultType="userInfo">
        select * from base_user where loginName=#{loginName}
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="findUserByTel" resultType="userInfo">
        select * from base_user where tel=#{tel}
    </select>

    <!-- 根据邮箱账号查询用户 -->
    <select id="findUserByEmail" resultType="userInfo">
        select * from base_user where email=#{email}
    </select>

    <!--添加用户-->
    <insert id="addUser">
        insert into base_user(id,userName,loginName,password,sex,tel,createTime,imgUrl,email)
        values (#{id},#{userName},#{loginName},#{password},#{sex},#{tel},NOW(),#{imgUrl},#{email})
    </insert>

    <!--修改用户-->
    <update id="updateUser">
        update base_user
        set
          userName=#{userName},
          loginName=#{loginName},
          password=#{password},
          sex=#{sex},
          tel=#{tel},
          createTime=now(),
          email=#{email}
          <if test="imgUrl != null and imgUrl != ''">
              ,imgUrl=#{imgUrl}
          </if>
        where id=#{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser">
        delete from base_user where id=#{id}
    </delete>

    <!--从中间表中删除该用户的角色-->
    <delete id="deleteRoleByUserId">
        delete from base_user_role where userId=#{id}
    </delete>

    <!-- 根据用户id查询该用户的所属角色 -->
    <select id="findRoleInfoByUserId" resultType="roleInfo">
      select br.* from base_user_role bur INNER JOIN base_role br ON bur.roleId=br.id where bur.userId=#{id}
    </select>

    <!-- 修改用户角色 -->
    <delete id="editRoleDel">
        delete from base_user_role where userId=#{uid}
    </delete>
    <insert id="editRoleAdd">
        insert into base_user_role(userId,roleId) values(#{uid},#{rid})
    </insert>
</mapper>